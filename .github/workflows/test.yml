name: Automated Testing

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Unit Tests
  unit-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [backend, frontend]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: ${{ matrix.app }}/package-lock.json
        
    - name: Install dependencies
      run: |
        cd ${{ matrix.app }}
        npm ci
        
    - name: Run unit tests
      run: |
        cd ${{ matrix.app }}
        npm test -- --coverage --watchAll=false
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./${{ matrix.app }}/coverage/lcov.info
        flags: ${{ matrix.app }}
        name: ${{ matrix.app }}-coverage

  # Integration Tests
  integration-tests:
    runs-on: ubuntu-latest
    needs: [unit-tests]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Docker
      uses: docker/setup-buildx-action@v3
      
    - name: Start services
      run: |
        docker-compose up -d
        sleep 30  # Wait for services to be ready
        
    - name: Run integration tests
      run: |
        cd backend
        npm run test:integration
        
    - name: Stop services
      run: docker-compose down

  # E2E Tests
  e2e-tests:
    runs-on: ubuntu-latest
    needs: [integration-tests]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install Playwright
      run: npm install -g playwright
      
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
      
    - name: Start application
      run: |
        docker-compose up -d
        sleep 60
        
    - name: Run E2E tests
      run: |
        npx playwright test
        
    - name: Stop application
      run: docker-compose down
      
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30